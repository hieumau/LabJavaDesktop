/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package numberpuzzlegame;

import de.alpharogroup.check.Check;
import de.alpharogroup.test.objects.A;

import javax.swing.*;
import javax.swing.border.BevelBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.concurrent.CountDownLatch;
import java.util.jar.JarEntry;

/**
 *
 * @author saost
 */
public class NumberPuzzleGame extends javax.swing.JFrame {

    /**
     * Creates new form NumberPuzzleGame
     */
    JLabel moveCountLabel =  new JLabel("Move count: " + 0);
    JLabel countDownLabel = new JLabel("Elapsed: 0 sec");
    JLabel levelLable = new JLabel("Level");
    JComboBox cbLevel = new JComboBox();
    numberpuzzlegame.NumberPanel numberPanel;
    int time;
    boolean isStartPlayed = false;
//    cbLevel.setPreferredSize(new Dimension(50, 30));
    JButton btnNewGame = new JButton("New Game");
    public NumberPuzzleGame() {
        initComponents();
        loadGame();

    }
    public void loadGame(){
        int baseSize = 100;
        int level = 3;
        numberPanel = new numberpuzzlegame.NumberPanel(level);

        JPanel panel = (JPanel) this.getContentPane();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        this.setSize(baseSize * (level + 1), baseSize * (level + 2));
        this.setResizable(false);
        
        panel.add(numberPanel);
        numberPanel.setPreferredSize(new java.awt.Dimension(getSize().width - 50, getSize().width - 50));
        numberPanel.setBorder(new BevelBorder(BevelBorder.LOWERED));

        panel.add(moveCountLabel);
        panel.add(countDownLabel);
        panel.add(levelLable);
        panel.add(cbLevel);
        panel.add(btnNewGame);
        CountTimeThread countTimeThread = new CountTimeThread();
        countTimeThread.start();
        CheckGameStatusThread checkGameStatusThread = new CheckGameStatusThread();
        checkGameStatusThread.start();
        btnNewGame.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                numberPanel.creatNewGame();
                time = 0;
                countDownLabel.setText("Elapsed: " + time + " sec");
                isStartPlayed = true;
            }

        });
    }


    class CountTimeThread extends Thread {
        @Override
        public void run() {
            while (true){
//                time = 0;
                countDownLabel.setText("Elapsed: " + time + " sec");
                while (isStartPlayed) {
                    time++;
                    try {
                        Thread.sleep(1000);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    countDownLabel.setText("Elapsed: " + time + " sec");
                }
            }
        }
    }

    class CheckGameStatusThread extends Thread {
        @Override
        public void run() {
            while (true){
                moveCountLabel.setText("Move count: " + numberPanel.moveCount);
                isStartPlayed = numberPanel.isCountingTime;
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NumberPuzzleGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NumberPuzzleGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NumberPuzzleGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NumberPuzzleGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NumberPuzzleGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
