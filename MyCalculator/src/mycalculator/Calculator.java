/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mycalculator;

/**
 *
 * @author saost
 */
public class Calculator extends javax.swing.JFrame {
    private String mainText = "0";
    private String secondText = "";
    private String buffer = "0";
    private String operator = "";
    private String memory = "";
    private String storage = "0";
    private boolean isResultButtomJustPressed = false;
    private boolean isMemoryReadButtomJustPressed = false;

    /**
     * Creates new form Calculator
     */

    public Calculator() {
        initComponents();
        loadScreen();
        secondScreen.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainScreen = new javax.swing.JTextField();
        secondScreen = new javax.swing.JTextField();
        btnMemoryRead = new javax.swing.JButton();
        btnMemoryClear = new javax.swing.JButton();
        btnMemorySubtract = new javax.swing.JButton();
        btnMemoryAdd = new javax.swing.JButton();
        btnClearAll = new javax.swing.JButton();
        btnOperatorPersent = new javax.swing.JButton();
        btnOperatorDivision = new javax.swing.JButton();
        btnNum9 = new javax.swing.JButton();
        btnNum8 = new javax.swing.JButton();
        btnNum7 = new javax.swing.JButton();
        btnResult = new javax.swing.JButton();
        btnOperatorMultiple = new javax.swing.JButton();
        btnNum6 = new javax.swing.JButton();
        btnNum5 = new javax.swing.JButton();
        btnNum4 = new javax.swing.JButton();
        btnOperatorSubtract = new javax.swing.JButton();
        btnNum3 = new javax.swing.JButton();
        btnNum2 = new javax.swing.JButton();
        btnNum1 = new javax.swing.JButton();
        btnNum0 = new javax.swing.JButton();
        btnOperatorInverse = new javax.swing.JButton();
        btnOperatorAdd = new javax.swing.JButton();
        btnOperatorAbs = new javax.swing.JButton();
        btnDot = new javax.swing.JButton();
        btnOperatorSquareRoot = new javax.swing.JButton();
        btnClearBuffer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainScreen.setEditable(false);
        mainScreen.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        mainScreen.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        mainScreen.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 7, true));
        mainScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainScreenActionPerformed(evt);
            }
        });

        secondScreen.setEditable(false);
        secondScreen.setBackground(new java.awt.Color(204, 255, 204));
        secondScreen.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        secondScreen.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        secondScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondScreenActionPerformed(evt);
            }
        });

        btnMemoryRead.setBackground(new java.awt.Color(204, 255, 153));
        btnMemoryRead.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnMemoryRead.setText("MR");
        btnMemoryRead.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMemoryRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemoryReadActionPerformed(evt);
            }
        });

        btnMemoryClear.setBackground(new java.awt.Color(204, 255, 153));
        btnMemoryClear.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnMemoryClear.setText("MC");
        btnMemoryClear.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMemoryClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemoryClearActionPerformed(evt);
            }
        });

        btnMemorySubtract.setBackground(new java.awt.Color(204, 255, 153));
        btnMemorySubtract.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnMemorySubtract.setText("M-");
        btnMemorySubtract.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMemorySubtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemorySubtractActionPerformed(evt);
            }
        });

        btnMemoryAdd.setBackground(new java.awt.Color(204, 255, 153));
        btnMemoryAdd.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnMemoryAdd.setText("M+");
        btnMemoryAdd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMemoryAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemoryAddActionPerformed(evt);
            }
        });

        btnClearAll.setBackground(new java.awt.Color(204, 255, 153));
        btnClearAll.setText("C");
        btnClearAll.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllActionPerformed(evt);
            }
        });

        btnOperatorPersent.setBackground(new java.awt.Color(204, 255, 153));
        btnOperatorPersent.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnOperatorPersent.setText("%");
        btnOperatorPersent.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnOperatorPersent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOperatorPersentActionPerformed(evt);
            }
        });

        btnOperatorDivision.setBackground(new java.awt.Color(204, 255, 153));
        btnOperatorDivision.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnOperatorDivision.setText("/");
        btnOperatorDivision.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnOperatorDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOperatorDivisionActionPerformed(evt);
            }
        });

        btnNum9.setBackground(new java.awt.Color(153, 204, 255));
        btnNum9.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnNum9.setText("9");
        btnNum9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 153), null, null));
        btnNum9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum9ActionPerformed(evt);
            }
        });

        btnNum8.setBackground(new java.awt.Color(153, 204, 255));
        btnNum8.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnNum8.setText("8");
        btnNum8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 153), null, null));
        btnNum8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum8ActionPerformed(evt);
            }
        });

        btnNum7.setBackground(new java.awt.Color(153, 204, 255));
        btnNum7.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnNum7.setText("7");
        btnNum7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 153), null, null));
        btnNum7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum7ActionPerformed(evt);
            }
        });

        btnResult.setBackground(new java.awt.Color(204, 255, 153));
        btnResult.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnResult.setText("=");
        btnResult.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultActionPerformed(evt);
            }
        });

        btnOperatorMultiple.setBackground(new java.awt.Color(204, 255, 153));
        btnOperatorMultiple.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnOperatorMultiple.setText("x");
        btnOperatorMultiple.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnOperatorMultiple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOperatorMultipleActionPerformed(evt);
            }
        });

        btnNum6.setBackground(new java.awt.Color(153, 204, 255));
        btnNum6.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnNum6.setText("6");
        btnNum6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 153), null, null));
        btnNum6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum6ActionPerformed(evt);
            }
        });

        btnNum5.setBackground(new java.awt.Color(153, 204, 255));
        btnNum5.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnNum5.setText("5");
        btnNum5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 153), null, null));
        btnNum5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum5ActionPerformed(evt);
            }
        });

        btnNum4.setBackground(new java.awt.Color(153, 204, 255));
        btnNum4.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnNum4.setText("4");
        btnNum4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 153), null, null));
        btnNum4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum4ActionPerformed(evt);
            }
        });

        btnOperatorSubtract.setBackground(new java.awt.Color(204, 255, 153));
        btnOperatorSubtract.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnOperatorSubtract.setText("-");
        btnOperatorSubtract.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnOperatorSubtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOperatorSubtractActionPerformed(evt);
            }
        });

        btnNum3.setBackground(new java.awt.Color(153, 204, 255));
        btnNum3.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnNum3.setText("3");
        btnNum3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 153), null, null));
        btnNum3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum3ActionPerformed(evt);
            }
        });

        btnNum2.setBackground(new java.awt.Color(153, 204, 255));
        btnNum2.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnNum2.setText("2");
        btnNum2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 153), null, null));
        btnNum2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum2ActionPerformed(evt);
            }
        });

        btnNum1.setBackground(new java.awt.Color(153, 204, 255));
        btnNum1.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnNum1.setText("1");
        btnNum1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 153), null, null));
        btnNum1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum1ActionPerformed(evt);
            }
        });

        btnNum0.setBackground(new java.awt.Color(153, 204, 255));
        btnNum0.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnNum0.setText("0");
        btnNum0.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 153), null, null));
        btnNum0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNum0ActionPerformed(evt);
            }
        });

        btnOperatorInverse.setBackground(new java.awt.Color(204, 255, 153));
        btnOperatorInverse.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnOperatorInverse.setText("1/x");
        btnOperatorInverse.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnOperatorInverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOperatorInverseActionPerformed(evt);
            }
        });

        btnOperatorAdd.setBackground(new java.awt.Color(204, 255, 153));
        btnOperatorAdd.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnOperatorAdd.setText("+");
        btnOperatorAdd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnOperatorAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOperatorAddActionPerformed(evt);
            }
        });

        btnOperatorAbs.setBackground(new java.awt.Color(204, 255, 153));
        btnOperatorAbs.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnOperatorAbs.setText("+/-");
        btnOperatorAbs.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnOperatorAbs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOperatorAbsActionPerformed(evt);
            }
        });

        btnDot.setBackground(new java.awt.Color(153, 204, 255));
        btnDot.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        btnDot.setText(".");
        btnDot.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 153), null, null));
        btnDot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDotActionPerformed(evt);
            }
        });

        btnOperatorSquareRoot.setBackground(new java.awt.Color(204, 255, 153));
        btnOperatorSquareRoot.setText("√");
        btnOperatorSquareRoot.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnOperatorSquareRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOperatorSquareRootActionPerformed(evt);
            }
        });

        btnClearBuffer.setBackground(new java.awt.Color(204, 255, 153));
        btnClearBuffer.setText("CE");
        btnClearBuffer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClearBuffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearBufferActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(secondScreen)
                            .addComponent(mainScreen, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNum7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNum8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNum9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnOperatorDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnOperatorPersent, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNum5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNum6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnOperatorMultiple, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnOperatorInverse, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnNum0, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnNum3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnOperatorSubtract, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnDot, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnOperatorAbs, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnOperatorAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnResult, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnMemoryClear, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnMemoryRead, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMemoryAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnClearBuffer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnMemorySubtract, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnOperatorSquareRoot, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(secondScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearBuffer, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMemoryRead, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMemoryClear, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMemorySubtract, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMemoryAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnOperatorSquareRoot, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNum8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNum7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOperatorDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNum9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOperatorPersent, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNum5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOperatorMultiple, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNum6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOperatorInverse, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOperatorSubtract, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNum3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNum0, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDot, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOperatorAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOperatorAbs, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnResult, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNum0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum0ActionPerformed
        // TODO add your handling code here:
        pressNumButton("0");
    }//GEN-LAST:event_btnNum0ActionPerformed

    private void mainScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainScreenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainScreenActionPerformed

    private void btnClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllActionPerformed
        // TODO add your handling code here:
        clearAll();
    }//GEN-LAST:event_btnClearAllActionPerformed

    private void btnNum1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum1ActionPerformed
        // TODO add your handling code here:
        pressNumButton("1");
    }//GEN-LAST:event_btnNum1ActionPerformed

    private void btnNum2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum2ActionPerformed
        // TODO add your handling code here:
        pressNumButton("2");
    }//GEN-LAST:event_btnNum2ActionPerformed

    private void btnNum3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum3ActionPerformed
        // TODO add your handling code here:
        pressNumButton("3");
    }//GEN-LAST:event_btnNum3ActionPerformed

    private void btnNum4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum4ActionPerformed
        // TODO add your handling code here:
        pressNumButton("4");
    }//GEN-LAST:event_btnNum4ActionPerformed

    private void btnNum5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum5ActionPerformed
        // TODO add your handling code here:
        pressNumButton("5");
    }//GEN-LAST:event_btnNum5ActionPerformed

    private void btnNum6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum6ActionPerformed
        // TODO add your handling code here:
        pressNumButton("6");
    }//GEN-LAST:event_btnNum6ActionPerformed

    private void btnNum7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum7ActionPerformed
        // TODO add your handling code here:
        pressNumButton("7");
    }//GEN-LAST:event_btnNum7ActionPerformed

    private void btnNum8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum8ActionPerformed
        // TODO add your handling code here:
        pressNumButton("8");
    }//GEN-LAST:event_btnNum8ActionPerformed

    private void btnNum9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNum9ActionPerformed
        // TODO add your handling code here:
        pressNumButton("9");
    }//GEN-LAST:event_btnNum9ActionPerformed

    private void pressNumButton(String key){
        if (isResultButtomJustPressed){
            clearAll();
        }
        if (!isMemoryEmpty() && isOperatorEmpty()){
            memory = "";
        }
        if (buffer.equals("0") || isMemoryReadButtomJustPressed){
            buffer = key;
        } else if (buffer.length() < 18){
            buffer = buffer + key;
        }
        mainText = buffer;
//        if (buffer.length() < 18) {
//            if(buffer.equals("0") || isMemoryReadButtomJustPressed){
//                buffer = key;
//            } else {
//                buffer = buffer + key;
//            }
//            mainText = buffer;
//        }
        loadMainScreen();
        loadLogScreen();
        isResultButtomJustPressed = false;
        isMemoryReadButtomJustPressed = false;

    }

    private void pressOperatorButton(String key){
        deleteLastDotInBuffer();
        if (key.equals("+") ||
                key.equals("-") ||
                key.equals("*") ||
                key.equals("/")){
                calculateBasicOperator(key);
        }
        if (key.equals("=")){
            calculateResult();
        }
        isMemoryReadButtomJustPressed = false;
    }

    private void calculateResult(){
        if (isMemoryEmpty() && !isBufferEmpty()){
            memory = buffer;
            buffer = "";
            mainText = memory;
            loadScreen();
        } else if (!isMemoryEmpty() && isOperatorEmpty() && !isBufferEmpty()) {
            memory = buffer;
            buffer = "";
            mainText = memory;
            loadScreen();
        } else if (!isMemoryEmpty() && isOperatorEmpty() && isBufferEmpty()){
            loadScreen();
        } else if (isBufferEmpty() && !isOperatorEmpty()){
            buffer = memory;
            mainText = calculateExpression(memory, buffer, operator);
            loadScreen();
            memory = mainText;
        } else if (!isBufferEmpty() && !isOperatorEmpty() && isResultButtomJustPressed){
            mainText = calculateExpression(memory, buffer, operator);
            loadScreen();
            memory = mainText;
        }else if (!isBufferEmpty() && !isOperatorEmpty() && !isResultButtomJustPressed){
            mainText = calculateExpression(memory, buffer, operator);
            loadScreen();
            memory = mainText;
        } else if (isBufferEmpty()){

        }
        loadLogScreen();
        isResultButtomJustPressed = true;
    }

    private void calculateBasicOperator(String key){
        deleteLastDotInBuffer();
        Double result = new Double(0);
        if (!isResultButtomJustPressed){
            if (isMemoryEmpty()){
                if (isBufferEmpty()){
                    buffer = "0";
                }
                memory = buffer;
                loadScreen();

            } else if (!isMemoryEmpty() && isOperatorEmpty() && !isBufferEmpty()){
                memory = buffer;
                buffer = "";
            } else if (!isMemoryEmpty() && !isBufferEmpty() && !isOperatorEmpty()){
                memory = calculateExpression(memory, buffer, operator);
                mainText = memory;
            }
        }
        isResultButtomJustPressed = false;
        buffer = "";
        operator = key;
        loadScreen();
        loadLogScreen();
        System.out.println(result);
    }

    private String calculateExpression(String memory, String buffer, String operator){
        Double result = new Double(0);
        if (!isBufferEmpty() && !isOperatorEmpty()){
            switch (operator){
                case "+":
                    result = Double.parseDouble(memory) + Double.parseDouble(buffer);
                    break;
                case "-":
                    result = Double.parseDouble(memory) - Double.parseDouble(buffer);
                    break;
                case "*":
                    result = Double.parseDouble(memory) * Double.parseDouble(buffer);
                    break;
                case "/":
                    if (buffer.equals("0")) return "error";
                    result = Double.parseDouble(memory) / Double.parseDouble(buffer);
                    break;
            }
        }

        return formatDouble(result);
    }
    private void pressSingleOperatorButton(String key){
        deleteLastDotInBuffer();
        if (isResultButtomJustPressed){
            memory = calculateSingleExpression(mainText, key);
            mainText = memory;
        }else if (!isMemoryEmpty() && !isBufferEmpty() && isOperatorEmpty()){
            memory = calculateSingleExpression(buffer, key);
            mainText = memory;
            buffer = "";
        } else if (isMemoryEmpty()){
            memory = calculateSingleExpression(buffer, key);
            mainText = memory;
            buffer = "";
        } else if (isOperatorEmpty()){
            memory = calculateSingleExpression(memory, key);
            mainText = memory;
            buffer = "";
        } else if (isBufferEmpty() && !isOperatorEmpty()){
            buffer = calculateSingleExpression(memory, key);
            mainText = buffer;
        } else if (!isBufferEmpty() && !isOperatorEmpty()){
            buffer = calculateSingleExpression(buffer, key);
            mainText = buffer;
        }
//        isResultButtomJustPressed = false;
        isMemoryReadButtomJustPressed = false;
        loadScreen();
        loadLogScreen();
    }
    private void pressMemoryButton(String key){
        deleteLastDotInBuffer();
        switch (key){
            case "mc":
                storage = "0";
//                buffer = "";
                break;
            case "mr":
                if (isResultButtomJustPressed){
                    clearAll();
                    mainText = storage;
                    buffer = storage;
                    loadMainScreen();
                    isResultButtomJustPressed = false;
                } else {
                    mainText = storage;
                    buffer = storage;
                    loadScreen();
                }
                isMemoryReadButtomJustPressed = true;
                break;
            case "m+":
                storage = formatDouble(Double.parseDouble(storage) + Double.parseDouble(mainScreen.getText()));
                break;
            case "m-":
                storage = formatDouble(Double.parseDouble(storage) - Double.parseDouble(mainScreen.getText()));
                break;
        }
        loadLogScreen();
    }
    private String calculateSingleExpression(String num, String key){
        Double result = new Double(0);
        switch (key){
            case "1/x":
                try {
                    if (Double.parseDouble(num) == 0) return "error";
                    result = 1 / Double.parseDouble(num);
                } catch (Exception e){
                    e.printStackTrace();
                    return "error";
                }
                break;
            case "%":
                try {
                    result = Double.parseDouble(num) / 100;
                } catch (Exception e){
                    e.printStackTrace();
                    return "error";
                }
                break;
            case "sqrt":
                try {
                    if (Double.parseDouble(num) < 0) return "error";
                    result = Math.sqrt(Double.parseDouble(num));
                } catch (Exception e){
                    e.printStackTrace();
                    return "error";
                }
                break;
            case "abs":
                try {
                    result = - Double.parseDouble(num);
                } catch (Exception e){
                    e.printStackTrace();
                    return "error";
                }
                break;
        }
        return formatDouble(result);
    }
    // reload the screen
    private void loadMainScreen(){
        mainScreen.setText(mainText);
    }

    private void loadScreen(){
        mainScreen.setText(mainText);
        if (mainText.equals("error")){
            mainText = "0";
            secondText = "";
            buffer = "0";
            operator = "";
            memory = "";
            secondScreen.setText("");
            return;
        }
        if (isMemoryEmpty() && buffer.equals("0")){
            secondScreen.setText("");
        } else {
            secondText = memory + " " + operator + " " + buffer;
            secondScreen.setText(secondText);
        }
    }
    private void loadLogScreen(){

        System.out.println("-------LOG-------");
        System.out.println("memory = " + memory);
        System.out.println("operator = " + operator);
        System.out.println("buffer = " + buffer);
        System.out.println("M = " + storage);
        System.out.println("mainText = " + mainScreen.getText());
        System.out.println("--------------");
    }

    //cut all the zero number in the end of double
    public static String formatDouble(double d)
    {
        if(d == (long) d)
            return String.format("%d",(long)d);
        else
            return String.format("%s",d);
    }
    private boolean isMemoryEmpty(){
        return memory.equals("");
    }
    private boolean isOperatorEmpty(){
        return operator.equals("");
    }
    private boolean isBufferEmpty(){
        return buffer.equals("");
    }

    private void btnDotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDotActionPerformed
        // TODO add your handling code here:
        if (isResultButtomJustPressed){
            clearAll();
        }
//
//        if (buffer.length() < 18) {
//            if(buffer.equals("0") || isMemoryReadButtomJustPressed){
//                buffer = key;
//            } else {
//                buffer = buffer + key;
//            }
//            mainText = buffer;
//        }

        if (isMemoryReadButtomJustPressed){
            buffer = "0";
        }
        if (buffer.indexOf(".") < 0){
            if (isBufferEmpty() ){
                buffer = "0";
            }
            buffer = buffer + ".";
            mainText = buffer;
        }
        loadLogScreen();
        loadMainScreen();
        isResultButtomJustPressed = false;
        isMemoryReadButtomJustPressed = false;
    }//GEN-LAST:event_btnDotActionPerformed

    private void btnClearBufferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearBufferActionPerformed
        // TODO add your handling code here:
        if(isResultButtomJustPressed){
            clearAll();
            return;
        }
        if (!isBufferEmpty()) {
            buffer = "0";
        }
        mainText = "0";
        loadScreen();
        loadLogScreen();
    }//GEN-LAST:event_btnClearBufferActionPerformed

    private void btnOperatorAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOperatorAddActionPerformed
        // TODO add your handling code here:
        pressOperatorButton("+");
    }//GEN-LAST:event_btnOperatorAddActionPerformed

    private void btnOperatorSubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOperatorSubtractActionPerformed
        // TODO add your handling code here:
        pressOperatorButton("-");
    }//GEN-LAST:event_btnOperatorSubtractActionPerformed

    private void btnOperatorMultipleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOperatorMultipleActionPerformed
        // TODO add your handling code here:
        pressOperatorButton("*");
    }//GEN-LAST:event_btnOperatorMultipleActionPerformed

    private void btnOperatorDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOperatorDivisionActionPerformed
        // TODO add your handling code here:
        pressOperatorButton("/");
    }//GEN-LAST:event_btnOperatorDivisionActionPerformed

    private void btnResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultActionPerformed
        // TODO add your handling code here:
        pressOperatorButton("=");
    }//GEN-LAST:event_btnResultActionPerformed

    private void btnOperatorInverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOperatorInverseActionPerformed
        // TODO add your handling code here:
        pressSingleOperatorButton("1/x");
    }//GEN-LAST:event_btnOperatorInverseActionPerformed

    private void btnOperatorPersentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOperatorPersentActionPerformed
        // TODO add your handling code here:
        pressSingleOperatorButton("%");
    }//GEN-LAST:event_btnOperatorPersentActionPerformed

    private void btnOperatorSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOperatorSquareRootActionPerformed
        // TODO add your handling code here:
        pressSingleOperatorButton("sqrt");
    }//GEN-LAST:event_btnOperatorSquareRootActionPerformed

    private void btnOperatorAbsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOperatorAbsActionPerformed
        // TODO add your handling code here:
        pressSingleOperatorButton("abs");
    }//GEN-LAST:event_btnOperatorAbsActionPerformed

    private void secondScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondScreenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secondScreenActionPerformed

    private void btnMemoryClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemoryClearActionPerformed
        // TODO add your handling code here:
        pressMemoryButton("mc");

    }//GEN-LAST:event_btnMemoryClearActionPerformed

    private void btnMemoryReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemoryReadActionPerformed
        // TODO add your handling code here:
        pressMemoryButton("mr");

    }//GEN-LAST:event_btnMemoryReadActionPerformed

    private void btnMemoryAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemoryAddActionPerformed
        // TODO add your handling code here:
        pressMemoryButton("m+");

    }//GEN-LAST:event_btnMemoryAddActionPerformed

    private void btnMemorySubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemorySubtractActionPerformed
        // TODO add your handling code here:
        pressMemoryButton("m-");

    }//GEN-LAST:event_btnMemorySubtractActionPerformed

    /**
     * @param args the command line arguments
     */
    private void deleteLastDotInBuffer(){
        if (!isBufferEmpty()){
            if (buffer.indexOf(".") == buffer.length() - 1){
                buffer = buffer.substring(0, buffer.length() - 1);
                mainText = buffer;
                loadScreen();
            }
        }
//        System.out.println("After deleted: " + buffer);
    }
    private void clearAll(){
        mainText = "0";
        secondText = "";
        buffer = "0";
        operator = "";
        memory = "";
        loadScreen();
        loadLogScreen();
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearAll;
    private javax.swing.JButton btnClearBuffer;
    private javax.swing.JButton btnDot;
    private javax.swing.JButton btnMemoryAdd;
    private javax.swing.JButton btnMemoryClear;
    private javax.swing.JButton btnMemoryRead;
    private javax.swing.JButton btnMemorySubtract;
    private javax.swing.JButton btnNum0;
    private javax.swing.JButton btnNum1;
    private javax.swing.JButton btnNum2;
    private javax.swing.JButton btnNum3;
    private javax.swing.JButton btnNum4;
    private javax.swing.JButton btnNum5;
    private javax.swing.JButton btnNum6;
    private javax.swing.JButton btnNum7;
    private javax.swing.JButton btnNum8;
    private javax.swing.JButton btnNum9;
    private javax.swing.JButton btnOperatorAbs;
    private javax.swing.JButton btnOperatorAdd;
    private javax.swing.JButton btnOperatorDivision;
    private javax.swing.JButton btnOperatorInverse;
    private javax.swing.JButton btnOperatorMultiple;
    private javax.swing.JButton btnOperatorPersent;
    private javax.swing.JButton btnOperatorSquareRoot;
    private javax.swing.JButton btnOperatorSubtract;
    private javax.swing.JButton btnResult;
    private javax.swing.JTextField mainScreen;
    private javax.swing.JTextField secondScreen;
    // End of variables declaration//GEN-END:variables
}
